{% set version = "3.9.83" %}

#Notice: Due to https://github.com/conda/conda-build/issues/5424 we can't have
#any inline python commands based on the PYTHON jinja variable. So all such
#commands go in .sh/.bat.

package:
  #Fixme: I think we ultimately need to rename this back to "ncrystal", since
  #the rerendered docs otherwise refers to "ncrystal-suite-feedstock"
  name: ncrystal-suite
  version: {{ version }}

source:
  #fixme:
  url: https://github.com/mctools/ncrystal/archive/82e36db4.tar.gz
  sha256: cd3cb3a75281c5fb8a73bcce5fd71257e3014cc5d97bb2dc8803d196ffa5badd
  folder: src

build:
  noarch: python
  number: 0

outputs:
  - name: ncrystal-core
    script: build_core.sh  # [unix]
    script: build_core.bat  # [win]
    build:
      ignore_run_exports_from:
        - python
    requirements:
      build:
        - cmake >=3.25
        - make  # [not win]
        - {{ compiler('cxx') }}
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
      host:
        - python  # note that python is only used to convert ncmat->C++ code
      run:
        #fixme: we just want to not have an empty section for now, and nothing
        #using python
        - zlib
    test:
      requires:
        - cmake >=3.25
      script: test_core.sh  # [unix]
      script: test_core.bat  # [win]

  - name: ncrystal-python
    #For some reason putting the pip install command inline here does not work,
    #so we use some scripts:
    script: build_python.sh  # [unix]
    script: build_python.bat  # [win]
    build:
      noarch: python
      entry_points:
        - nctool = NCrystal._cli_nctool:main
        - ncrystal_cif2ncmat = NCrystal._cli_cif2ncmat:main
        - ncrystal_endf2ncmat = NCrystal._cli_endf2ncmat:main
        - ncrystal_hfg2ncmat = NCrystal._cli_hfg2ncmat:main
        - ncrystal_mcstasunion = NCrystal._cli_mcstasunion:main
        - ncrystal_ncmat2cpp = NCrystal._cli_ncmat2cpp:main
        - ncrystal_ncmat2hkl = NCrystal._cli_ncmat2hkl:main
        - ncrystal_vdos2ncmat = NCrystal._cli_vdos2ncmat:main
        - ncrystal_verifyatompos = NCrystal._cli_verifyatompos:main
    requirements:
      build:
        - python  {{ python_min }}  # [build_platform != target_platform]
        - cross-python_{{ target_platform }}  # [build_platform != target_platform]
      host:
        - python  {{ python_min }}
        - pip
        - setuptools >=64.0
      run:
        - python >={{ python_min }}
        - numpy >=1.22
    test:
      requires:
        - python {{ python_min }}
        - pip
      commands:
        - pip check
        - pip show ncrystal-python

  - name: ncrystal
    #Fixme: Should "pip list" show ncrystal as being installed? To prevent pip
    #installs in the conda environment from pulling in ncrystal from pypi? To do
    #that, we can simply pip install the ./src/ncrystal_metapkg. However, we
    #also need an ncrystal_core dummy metapkg in this case, or pip check will
    #fail. Or perhaps ncrystal-core should be split up, so ncrystal-core-nopy
    #will contain the actual files, and ncrystal-core will provide the dummy
    #python module?
    build:
      noarch: generic
    requirements:
      host:
        - python
      run:
        #The ncrystal meta package ensures version matching between the other
        #ncrystal packages:
        - python
        - ncrystal-core ={{ version }}
        - ncrystal-python ={{ version }}
    test:
      requires:
        - python
        - cmake >=3.25
        - pip
      script: test_ncrystal.sh  # [unix]
      script: test_ncrystal.bat  # [win]

about:
  home: https://github.com/mctools/ncrystal
  summary: Library for thermal neutron transport in crystals and other materials.
  description: |
    NCrystal is a library and toolkit for thermal neutron transport in crystals
    and other materials. It can be used standalone or as a backend for other
    Monte Carlo particle simulation frameworks.
  license: Apache-2.0
  license_family: Apache
  license_file: src/LICENSE
  doc_url: https://github.com/mctools/ncrystal/wiki
  dev_url: https://github.com/mctools/ncrystal

extra:
  recipe-maintainers:
    - tkittel
